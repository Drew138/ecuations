[{"/home/drew/javascript/ecuations/src/index.tsx":"1","/home/drew/javascript/ecuations/src/reportWebVitals.ts":"2","/home/drew/javascript/ecuations/src/App.tsx":"3","/home/drew/javascript/ecuations/src/components/Navigation.tsx":"4","/home/drew/javascript/ecuations/src/views/Home.tsx":"5","/home/drew/javascript/ecuations/src/views/LogIn.tsx":"6","/home/drew/javascript/ecuations/src/components/form/Form.tsx":"7","/home/drew/javascript/ecuations/src/views/SignUp.tsx":"8","/home/drew/javascript/ecuations/src/views/History.tsx":"9","/home/drew/javascript/ecuations/src/views/Account.tsx":"10","/home/drew/javascript/ecuations/src/components/Footer.tsx":"11","/home/drew/javascript/ecuations/src/configuration.ts":"12","/home/drew/javascript/ecuations/src/components/account/Card.tsx":"13","/home/drew/javascript/ecuations/src/Context.tsx":"14"},{"size":586,"mtime":1607822117340,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1607821217870,"results":"17","hashOfConfig":"16"},{"size":1042,"mtime":1609122061804,"results":"18","hashOfConfig":"16"},{"size":3351,"mtime":1608519696980,"results":"19","hashOfConfig":"16"},{"size":3096,"mtime":1609132291320,"results":"20","hashOfConfig":"16"},{"size":1855,"mtime":1609117433500,"results":"21","hashOfConfig":"16"},{"size":3888,"mtime":1609124788890,"results":"22","hashOfConfig":"16"},{"size":2265,"mtime":1609100896490,"results":"23","hashOfConfig":"16"},{"size":612,"mtime":1608520476560,"results":"24","hashOfConfig":"16"},{"size":664,"mtime":1609118028280,"results":"25","hashOfConfig":"16"},{"size":1019,"mtime":1608523824270,"results":"26","hashOfConfig":"16"},{"size":151,"mtime":1609120023510,"results":"27","hashOfConfig":"16"},{"size":3314,"mtime":1609120713160,"results":"28","hashOfConfig":"16"},{"size":370,"mtime":1609123205304,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ommo89",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/drew/javascript/ecuations/src/index.tsx",[],["66","67"],"/home/drew/javascript/ecuations/src/reportWebVitals.ts",[],"/home/drew/javascript/ecuations/src/App.tsx",["68"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navigation from './components/Navigation'\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './views/Home'\nimport LogIn from './views/LogIn'\nimport SignUp from './views/SignUp'\nimport History from './views/History'\nimport Account from './views/Account'\nimport Footer from \"./components/Footer\"\nimport { AppProvider } from './Context'\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <AppProvider>\n        <Navigation/>\n        <section>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/login\" component={LogIn}/>\n            <Route exact path=\"/signup\" component={SignUp}/>\n            <Route exact path=\"/history\" component={History}/>\n            <Route exact path=\"/account\" component={Account}/>\n          </Switch>\n        </section>\n        <Footer/>\n      </AppProvider>\n    </div>\n  );\n}\n// https://material-ui.com/components/avatars/\nexport default App;\n","/home/drew/javascript/ecuations/src/components/Navigation.tsx",["69","70","71","72","73","74"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Link} from 'react-router-dom';\n\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {useHistory} from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: 'Andika New Basic',\n    fontSize: 24,\n  },\n}));\n\n\nexport default function Navigation(): JSX.Element {\n  const classes = useStyles();\n  const history = useHistory()\n  // const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<EventTarget & HTMLButtonElement | null>(null);\n  const open: boolean = Boolean(anchorEl);\n\n//   const handleChange = (event) => {\n//     setAuth(event.target.checked);\n//   };\n\n  const handleMenu = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root} >\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Easy Ecuation\n          </Typography>\n          <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={() => {history.push(\"/\")\n                  handleClose()}}>Home</MenuItem>\n                <MenuItem onClick={() => {history.push(\"/history\")\n                  handleClose()}}>History</MenuItem>\n                <MenuItem onClick={() => {history.push(\"/login\") // TODO refactor\n                    handleClose()}} >Log In</MenuItem>\n                <MenuItem onClick={() => {history.push(\"/signup\")\n                  handleClose()}}>Sign Up</MenuItem>\n                <MenuItem onClick={handleClose}>Log Out</MenuItem>\n                <MenuItem onClick={() => {history.push(\"/account\")\n                  handleClose()}}>My Account</MenuItem>\n              </Menu>\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/home/drew/javascript/ecuations/src/views/Home.tsx",["75","76","77"],"/home/drew/javascript/ecuations/src/views/LogIn.tsx",["78"],"import React, {useState} from 'react'\nimport CustomForm from '../components/form/Form'\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport {LOGIN_ENDPOINT} from '../configuration'\nimport {useHistory} from 'react-router-dom'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { stringify } from 'querystring';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minumumHeight:\"83.5vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#F0F0F0\"\n    },\n  }));\n\ninterface LoginTypes {\n    name: string;\n    password: string;\n}\n\ninterface Props {\n    onSubmit: (values: LoginTypes) => Promise<void>;\n}\n\nconst LogIn: React.FC<Props> = () => {\n    const history = useHistory()\n    const classes = useStyles()\n    const [warning, setWarning] = useState(false);\n    const [alertText, setAlertText] = useState(\"\");\n\n    const onSubmit = async (values: LoginTypes) => {\n        try {\n            const res = await axios.post(LOGIN_ENDPOINT, values)\n\n            history.push(\"/\")\n        } catch (e) {\n            console.log(e)\n            setAlertText(() => stringify(e))\n            setWarning(() => !warning)\n        }\n    } \n\n    const closeWarning = () => {\n        setWarning(() => !warning)\n    }\n    \n    return (\n        \n        <div className={classes.root}>\n            <CustomForm onSubmit={onSubmit} formType={\"login\"}/>\n            <SweetAlert\n                title=\"Error occurred while signing up\"\n                danger\n                confirmBtnBsStyle=\"primary\"\n                confirmBtnText=\"Continue\"\n                onConfirm={closeWarning}\n                show={warning}\n            >\n                {alertText}\n            </SweetAlert>\n        </div>\n    )\n}\n\nexport default LogIn","/home/drew/javascript/ecuations/src/components/form/Form.tsx",["79","80","81","82","83","84","85","86","87","88","89"],"import React, {useEffect, useState} from 'react'\nimport { Button, Grid, Paper, RadioGroup, FormControl, FormControlLabel, FormLabel, CardHeader  } from \"@material-ui/core\";\nimport { Form, Field } from 'react-final-form';\nimport {TextField, Checkbox, Radio, Select, Input} from 'final-form-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// https://github.com/benawad/react-typescript-material-ui-form/blob/master/src/MyForm.tsx\n\ninterface Values {\n    name: string;\n    surname: string;\n    password: string;\n    email: string;\n    confirm: string;\n}\n\ninterface Props {\n    formType: string,\n    onSubmit: (values: Values) => Promise<void>;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    //   flexGrow: 1,\n    //   overflow: 'hidden',\n    //   padding: theme.spacing(0, 3),\n    //   height: \"89.5vh\"\n    margin: \"10px auto\",\n    },\n    paper: {\n      width: 400,\n      margin: `${theme.spacing(1)}px auto`,\n      padding: theme.spacing(2),\n    },\n    title: {\n        fontFamily: 'Andika New Basic',\n      },\n  }));\n\nconst CustomForm: React.FC<Props> = ({onSubmit, formType}) => {\n    const classes = useStyles();\n    \n    return (\n        <Form onSubmit={onSubmit}\n            render={({ handleSubmit }) => (<form className={classes.root} onSubmit={handleSubmit}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Grid direction=\"column\" container spacing={2}>\n                        <Grid item>\n                            <Typography component=\"h2\" variant=\"h4\" className={classes.title}>\n                                {(formType === \"register\" || formType === \"register-admin\") ? \"Sign Up\" : \"Log In\"}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Field name=\"name\" placeholder=\"Name\" component={TextField}/>\n                        </Grid>\n                        {\n                            (formType === \"register\" || formType === \"register-admin\") &&\n                            <React.Fragment>\n                                <Grid item>\n                                    <Field name=\"surname\" placeholder=\"Surname\" component={TextField}/>\n                                </Grid>\n                                <Grid item>\n                                    <Field name=\"email\" placeholder=\"Email\" type=\"email\" component={TextField}/>\n                                </Grid>\n                            </React.Fragment>\n                        }\n                        <Grid item>\n                            <Field name=\"password\"\n                            placeholder=\"Password\" \n                            type=\"password\"\n                            component={TextField}/>\n                        </Grid>\n                        {\n                            (formType === \"register\" || formType === \"register-admin\") &&\n                            <React.Fragment>\n                                <Grid item>\n                                    <Field name=\"confirm\" \n                                    placeholder=\"Confirm Password\"\n                                    type=\"password\"\n                                    component={TextField}/>\n                                </Grid>\n                            </React.Fragment>\n                        }\n                        <Grid item >\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Grid> \n                    </Grid>\n                </Paper>\n            </form>)} \n        />\n    )\n};\n\nexport default CustomForm","/home/drew/javascript/ecuations/src/views/SignUp.tsx",["90"],"import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomForm from '../components/form/Form';\nimport { REGISTER_ENDPOINT } from '../configuration'\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { stringify } from 'querystring';\n\ninterface RegisterTypes {\n    name: string;\n    surname: string;\n    password: string;\n    email: string;\n    confirm: string;\n}\n\ninterface Props {\n    onSubmit: (values: RegisterTypes) => Promise<void>;\n    closeWarning: () => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minumumHeight: \"83.5vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#F0F0F0\"\n    },\n}));\n\nconst SignUp: React.FC<Props> = () => {\n    const history = useHistory()\n    const classes = useStyles()\n    const [warning, setWarning] = useState(false);\n    const [alertText, setAlertText] = useState(\"\");\n\n\n    const onSubmit = async (values: RegisterTypes) => {\n        if (values.password !== values.confirm) {\n            setAlertText(() => \"Passwords do not match\")\n            setWarning(() => !warning)\n            return\n        }\n        try {\n            console.log(values)\n            const res = await axios.post(REGISTER_ENDPOINT, values)\n            history.push(\"/\")\n        } catch (e) {\n            console.log(e)\n            setAlertText(() => stringify(e))\n            setWarning(() => !warning)\n        }\n    }\n\n    const closeWarning = () => {\n        setWarning(() => !warning)\n    }\n\n    return (\n        <div className={classes.root}>\n            <CustomForm onSubmit={onSubmit} formType={\"register-admin\"} />\n            <SweetAlert\n                title=\"Error occurred while signing up\"\n                danger\n                confirmBtnBsStyle=\"primary\"\n                confirmBtnText=\"Continue\"\n                onConfirm={closeWarning}\n                show={warning}\n            >\n                {alertText}\n            </SweetAlert>\n        </div>\n    )\n};\n\nexport default SignUp\n\n// https://github.com/benawad/react-typescript-material-ui-form/blob/master/src/MyForm.tsx","/home/drew/javascript/ecuations/src/views/History.tsx",[],"/home/drew/javascript/ecuations/src/views/Account.tsx",[],"/home/drew/javascript/ecuations/src/components/Footer.tsx",["91"],"import GitHubIcon from '@material-ui/icons/GitHub';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport React from 'react'\n// import MyForm from './SignUp'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    cont: {\n        width: \"100%\",\n        height: \"100%\",\n    }\n}));\n\nexport default function Footer(): JSX.Element {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setValue(newValue);\n    };\n    return (\n        <BottomNavigation\n        value={value} \n        onChange={handleChange} \n        showLabels\n      >\n         <BottomNavigationAction label=\"Frontend\" value=\"frontend\" icon={<GitHubIcon />} />\n         <BottomNavigationAction label=\"Backend\" value=\"backend\" icon={<GitHubIcon />} />\n      </BottomNavigation>\n\n    )\n}","/home/drew/javascript/ecuations/src/configuration.ts",[],"/home/drew/javascript/ecuations/src/components/account/Card.tsx",["92","93","94"],"import React, {useState} from 'react'\n// import MyForm from './SignUp'\nimport {default as UICard} from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { DELETE_ACCOUNT_ENDPOINT, UPDATE_ACCOUNT_ENPOINT } from \"../../configuration\"\nimport axios from 'axios'\n\nconst useStyles = makeStyles((theme) => ({\n//     cont: {\n//         width: \"100%\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n// },\n    r: {width: \"30%\", minumumHeight: \"45%\"},\n    button: {\n        margin: \"5px\"\n    }\n}));\n\n\nconst Card: React.FC = () => {\n    const classes = useStyles();\n    const [warningIsOpen, setWarningIsOpen] = useState(false);\n\n    const openWarning = () => {\n        setWarningIsOpen(() => !warningIsOpen)\n    }\n\n    const onConfirm = async () => {\n        try {\n            const res = await axios.delete(DELETE_ACCOUNT_ENDPOINT)\n            // TODO\n        } catch (e) {\n\n        }\n        \n        setWarningIsOpen(() => !warningIsOpen)\n    }\n    \n    const onCancel = () => {\n        setWarningIsOpen(() => !warningIsOpen)\n    }\n\n    const onUpdate = async () => {\n        try {\n            const res = await axios.patch(UPDATE_ACCOUNT_ENPOINT)\n        } catch (e) {\n\n        }\n    }\n\n    return (\n            <UICard className={classes.r}>\n                <CardContent>\n                    <CardHeader\n                        avatar={\n                        <Avatar aria-label=\"recipe\" >\n                            R\n                        </Avatar>\n                        }\n                        // action={\n                        // <IconButton aria-label=\"settings\">\n                        //     <MoreVertIcon />\n                        // </IconButton>\n                        // }\n                        title=\"Account Manager\"\n                        subheader=\"View your account details\"\n                    />\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                        Update\n                    </Button>\n                    \n                    <Button \n                        color=\"secondary\" \n                        variant=\"outlined\" \n                        className={classes.button} \n                        onClick={openWarning}>\n                        Delete My Account\n                    </Button>\n                </CardContent>\n                <SweetAlert\n                    title=\"Warning!\"\n                    warning\n                    showCancel\n                    cancelBtnText=\"Cancel\"\n                    confirmBtnText=\"Yes, Delete my Account\"\n                    confirmBtnBsStyle=\"danger\"\n                    onConfirm={onConfirm}\n                    onCancel={onCancel}\n                    show={warningIsOpen}\n                >\n                    Deleting your account is an irreversible action, and in doing so you will delete all your queries.\n                </SweetAlert>\n            </UICard>\n    )\n}\n\nexport default Card","/home/drew/javascript/ecuations/src/Context.tsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":16},{"ruleId":"99","severity":1,"message":"105","line":9,"column":9,"nodeType":"101","messageId":"102","endLine":9,"endColumn":13},{"ruleId":"99","severity":1,"message":"106","line":13,"column":8,"nodeType":"101","messageId":"102","endLine":13,"endColumn":14},{"ruleId":"99","severity":1,"message":"107","line":14,"column":8,"nodeType":"101","messageId":"102","endLine":14,"endColumn":24},{"ruleId":"99","severity":1,"message":"108","line":15,"column":8,"nodeType":"101","messageId":"102","endLine":15,"endColumn":17},{"ruleId":"99","severity":1,"message":"109","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"111","line":45,"column":11,"nodeType":"101","messageId":"102","endLine":45,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":38,"column":19,"nodeType":"101","messageId":"102","endLine":38,"endColumn":22},{"ruleId":"99","severity":1,"message":"113","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"114","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":35},{"ruleId":"99","severity":1,"message":"115","line":2,"column":31,"nodeType":"101","messageId":"102","endLine":2,"endColumn":41},{"ruleId":"99","severity":1,"message":"116","line":2,"column":43,"nodeType":"101","messageId":"102","endLine":2,"endColumn":54},{"ruleId":"99","severity":1,"message":"107","line":2,"column":56,"nodeType":"101","messageId":"102","endLine":2,"endColumn":72},{"ruleId":"99","severity":1,"message":"117","line":2,"column":74,"nodeType":"101","messageId":"102","endLine":2,"endColumn":83},{"ruleId":"99","severity":1,"message":"118","line":2,"column":85,"nodeType":"101","messageId":"102","endLine":2,"endColumn":95},{"ruleId":"99","severity":1,"message":"119","line":4,"column":20,"nodeType":"101","messageId":"102","endLine":4,"endColumn":28},{"ruleId":"99","severity":1,"message":"120","line":4,"column":30,"nodeType":"101","messageId":"102","endLine":4,"endColumn":35},{"ruleId":"99","severity":1,"message":"121","line":4,"column":37,"nodeType":"101","messageId":"102","endLine":4,"endColumn":43},{"ruleId":"99","severity":1,"message":"122","line":4,"column":45,"nodeType":"101","messageId":"102","endLine":4,"endColumn":50},{"ruleId":"99","severity":1,"message":"112","line":49,"column":19,"nodeType":"101","messageId":"102","endLine":49,"endColumn":22},{"ruleId":"99","severity":1,"message":"123","line":17,"column":11,"nodeType":"101","messageId":"102","endLine":17,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":38,"column":19,"nodeType":"101","messageId":"102","endLine":38,"endColumn":22},{"ruleId":"99","severity":1,"message":"124","line":51,"column":11,"nodeType":"101","messageId":"102","endLine":51,"endColumn":19},{"ruleId":"99","severity":1,"message":"112","line":53,"column":19,"nodeType":"101","messageId":"102","endLine":53,"endColumn":22},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MyForm' is defined but never used.","'Height' is defined but never used.","'Props' is defined but never used.","'res' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'CardHeader' is defined but never used.","'Checkbox' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'classes' is assigned a value but never used.","'onUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]